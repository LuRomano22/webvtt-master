//
// Copyright (c) 2013 Mozilla Foundation and Contributors
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//  - Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//  - Redistributions in binary form must reproduce the above copyright
// notice, this list of conditions and the following disclaimer in the
// documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

#ifndef __WEBVTTXX_TIMESTAMP__
# define __WEBVTTXX_TIMESTAMP__

# include <webvtt/cue.h>
# include "base"

namespace WebVTT
{

class Timestamp
{
public:
  enum {
    MillisPerHour = 3600000,
    MillisPerMinute = 60000,
    MillisPerSecond = 1000,
  };
  Timestamp() : ts(0xFFFFFFFFFFFFFFFF) {}
  Timestamp(webvtt_timestamp time) : ts(time) {}

  inline webvtt_timestamp value() const { return ts; }

  inline uint64 hours() const { return ts / MillisPerHour; }
  inline uint64 minutes() const {
    return ( ts % MillisPerHour ) / MillisPerMinute;
  }
  inline uint64 seconds() const {
    return ( ts % MillisPerMinute ) / MillisPerSecond;
  }
  inline uint64 milliseconds() const { return ts % MillisPerSecond; }

private:
  webvtt_timestamp ts;
};

}

#endif
